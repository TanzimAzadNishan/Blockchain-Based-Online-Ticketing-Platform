"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.net_corda_core_identity_abstract_party import NetCordaCoreIdentityAbstractParty
from openapi_client.model.net_corda_core_node_services_vault_column_predicate_long import NetCordaCoreNodeServicesVaultColumnPredicateLong
from openapi_client.model.net_corda_core_node_services_vault_constraint_info import NetCordaCoreNodeServicesVaultConstraintInfo
from openapi_client.model.net_corda_core_utilities_opaque_bytes import NetCordaCoreUtilitiesOpaqueBytes
globals()['NetCordaCoreIdentityAbstractParty'] = NetCordaCoreIdentityAbstractParty
globals()['NetCordaCoreNodeServicesVaultColumnPredicateLong'] = NetCordaCoreNodeServicesVaultColumnPredicateLong
globals()['NetCordaCoreNodeServicesVaultConstraintInfo'] = NetCordaCoreNodeServicesVaultConstraintInfo
globals()['NetCordaCoreUtilitiesOpaqueBytes'] = NetCordaCoreUtilitiesOpaqueBytes
from openapi_client.model.net_corda_core_node_services_vault_query_criteria_fungible_asset_query_criteria_all_of import NetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf


class TestNetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf(unittest.TestCase):
    """NetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testNetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf(self):
        """Test NetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf"""
        # FIXME: construct object with mandatory attributes with example values
        # model = NetCordaCoreNodeServicesVaultQueryCriteriaFungibleAssetQueryCriteriaAllOf()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
